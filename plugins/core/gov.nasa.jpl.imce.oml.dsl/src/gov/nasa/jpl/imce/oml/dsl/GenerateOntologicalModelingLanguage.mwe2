/*
 * Copyright 2016 California Institute of Technology ("Caltech").
 * U.S. Government sponsorship acknowledged.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * License Terms
 */
module gov.nasa.jpl.imce.oml.dsl.GenerateOntologicalModelingLanguage

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

Workflow {
	
	bean = StandaloneSetup {
		scanClassPath  = true
		registerGenModelFile = "platform:/resource/org.eclipse.emf.ecore/model/Ecore.genmodel"
		registerGenModelFile = "platform:/resource/org.eclipse.emf.ecore/model/XMLNamespace.genmodel"
		registerGenModelFile = "platform:/resource/org.eclipse.emf.ecore/model/XMLType.genmodel"
		registerGeneratedEPackage = "org.eclipse.xtext.xbase.XbasePackage"
		registerGenModelFile = "platform:/resource/org.eclipse.xtext.xbase/model/Xbase.genmodel"
		registerGenModelFile = "platform:/resource/org.eclipse.xtext.common.types/model/JavaVMTypes.genmodel"
	}
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "gov.nasa.jpl.imce.oml.dsl"
				
				rootPath = ".."
				runtimeTest = {
					enabled = true
					root = "../../tests/core/gov.nasa.jpl.imce.oml.dsl.tests"
				}
				// @TODO: There are no tests.
				// @TODO: In Eclipse, the generated OntologicalModelingLanguageUiInjectorProvider has a compile error
				// 		  because it cannot access gov.nasa.jpl.imce.oml.dsl.ui.internal.DslActivator even though
				//		  the manifest in gov.nasa.jpl.imce.oml.dsl.ui specifically makes it visible to the test plugin:
				//		  gov.nasa.jpl.imce.oml.dsl.ui.internal;x-friends:="gov.nasa.jpl.imce.oml.dsl.ui.tests",
				eclipsePluginTest = {
					enabled = false
					root = "./gov.nasa.jpl.imce.oml.dsl.ui.tests"
				}
				genericIde = {
					enabled = true
					root = "./gov.nasa.jpl.imce.oml.dsl.ide"
				}
				eclipsePlugin = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				fileHeader = "/*\n * Copyright 2016 California Institute of Technology (\\\"Caltech\\\").\n * U.S. Government sponsorship acknowledged.\n *\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */"
			}
		}
		language = StandardLanguage {
			name = "gov.nasa.jpl.imce.oml.dsl.OntologicalModelingLanguage"
			fileExtensions = "oml"
			referencedResource = "platform:/resource/gov.nasa.jpl.imce.oml.model/resources/model/OMLCommon.xcore"
			referencedResource = "platform:/resource/gov.nasa.jpl.imce.oml.model/resources/model/OMLTerminologies.xcore"
			referencedResource = "platform:/resource/gov.nasa.jpl.imce.oml.model/resources/model/OMLGraphs.xcore"
			referencedResource = "platform:/resource/gov.nasa.jpl.imce.oml.model/resources/model/OMLBundles.xcore"
			referencedResource = "platform:/resource/gov.nasa.jpl.imce.oml.model/resources/model/OMLDescriptions.xcore"
				
			grammarUri = "platform:/resource/gov.nasa.jpl.imce.oml.dsl/src/gov/nasa/jpl/imce/oml/dsl/OntologicalModelingLanguage.xtext"

			formatter = {
				generateStub = true
				generateXtendStub = true
			}
			
			serializer = {
				generateStub = false
			}
			
			validator = {
				composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
			
			newProjectWizardForEclipse = {
				generate = true
			}
		}
	}
}
